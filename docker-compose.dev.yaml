version: "3"
services:

  api:
#    image: webqube/starter-api
    container_name: ${API_CONTAINER_NAME}
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST} #https://stackoverflow.com/questions/33357567/econnrefused-for-postgres-on-nodejs-with-dockers
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.app-secure.entrypoints=websecure"
      - "traefik.http.routers.app-secure.rule=Host(`${PUBLIC_URL}`)"
    volumes:
      - ./api/config:/opt/app/config
      - ./api/src:/opt/app/src
      - ./api/package.json:/opt/package.json
      - ./api/package-lock.json:/opt/package-lock.json # Replace with package-lock.json if using npm
      - .env:/opt/app/.env
    ports:
      - "1337:1337"
    links:
      - db
    networks:
      - proxy
      - default
    depends_on:
      - db

  db:
    image: postgres:14.0-alpine
    container_name: ${DB_CONTAINER_NAME}
    restart: unless-stopped
    env_file: ./.env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - data:/var/lib/postgresql/data/ #using a volume
    ports:
      - "35432:5432"



#  frontend:
#    container_name: webqube-starter-frontend
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile-dev
#    volumes:
#      - ./frontend/:/usr/src/app
#    ports:
#      - "4200:4200"
#    networks:
#      - dev-network

volumes:
  data:

networks:
  proxy:
    external: true
